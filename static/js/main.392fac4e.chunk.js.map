{"version":3,"sources":["Form.tsx","List.tsx","Progress.tsx","App.tsx","index.tsx"],"names":["Form","props","e","keyCode","this","onKeyDown","currentTarget","value","className","handleKeyDown","placeholder","React","Component","List","i","item","onChange","list","map","key","handleChange","type","defaultChecked","done","todo","Progress","filter","length","App","state","slice","push","setState","handleKeyDownAddItem","handleChangeDone","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAmCeA,G,6DAzBX,WAAYC,GAAmB,uCACrBA,G,0DAGIC,GACW,KACjBA,EAAEC,UACFC,KAAKH,MAAMI,UAAUH,EAAEI,cAAcC,OACrCL,EAAEI,cAAcC,MAAQ,M,+BAItB,IAAD,OACL,OACI,yBAAKC,UAAU,QACX,+BACI,2BAAOA,UAAU,YACVH,UAAW,SAACH,GAAD,OAAO,EAAKO,cAAcP,IACrCQ,YAAY,uB,GAnBpBC,IAAMC,YC4BVC,G,wDA3BX,WAAYZ,GAAmB,uCACrBA,G,yDAGGa,EAAWC,GACpBX,KAAKH,MAAMe,SAASF,EAAGC,K,+BAGjB,IAAD,OACL,OACI,yBAAKP,UAAU,QACX,4BACKJ,KAAKH,MAAMgB,KAAKC,KAAI,SAACH,EAAYD,GAAb,OACjB,wBAAIK,IAAKL,GACL,2BAAOE,SAAU,kBAAM,EAAKI,aAAaN,EAAGC,KACxC,2BAAOM,KAAK,WACLC,eAAgBP,EAAKQ,OAC5B,0BAAMf,UAAWO,EAAKQ,KAAO,OAAS,IAAKR,EAAKS,iB,GAlB7Db,IAAMC,YCeVa,G,wDAfX,WAAYxB,GAAuB,uCACzBA,G,qDAIN,OACI,yBAAKO,UAAU,YACVJ,KAAKH,MAAMgB,KAAKS,QAAO,SAACX,GACrB,OAAQA,EAAKQ,QACdI,OAHP,oB,GAPWhB,IAAMC,YC6CdgB,E,kDAxCX,WAAY3B,GAAa,IAAD,8BACpB,cAAMA,IACD4B,MAAQ,CACTZ,KAAM,CACF,CAACO,KAAM,2BAAQD,MAAM,GACrB,CAACC,KAAM,+DAAcD,MAAM,GAC3B,CAACC,KAAM,mDAAYD,MAAM,KANb,E,iEAWHC,GACjB,IAAMP,EAAOb,KAAKyB,MAAMZ,KAAKa,QACzBf,EAAO,CAACS,KAAMA,EAAMD,MAAM,GAC9BN,EAAKc,KAAKhB,GACVX,KAAK4B,SAAS,CACVf,KAAMA,M,uCAIGH,EAAWC,GACxB,IAAME,EAAOb,KAAKyB,MAAMZ,KAAKa,QAC7Bb,EAAKH,GAAK,CAACU,KAAMT,EAAKS,KAAMD,MAAOR,EAAKQ,MACxCnB,KAAK4B,SAAS,CACVf,KAAMA,M,+BAIJ,IAAD,OACL,OACI,yBAAKT,UAAU,OACX,kBAAC,EAAD,CAAMH,UAAW,SAACmB,GAAD,OAAgB,EAAKS,qBAAqBT,MAC3D,kBAAC,EAAD,CAAMP,KAAMb,KAAKyB,MAAMZ,KACjBD,SAAU,SAACF,EAAWC,GAAZ,OAA2B,EAAKmB,iBAAiBpB,EAAGC,MACpE,kBAAC,EAAD,CAAUE,KAAMb,KAAKyB,MAAMZ,Y,GAnCzBN,IAAMC,WCPxBuB,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.392fac4e.chunk.js","sourcesContent":["import React from 'react';\nimport Item from \"./Interfaces/Item\";\nimport './Form.css';\n\ninterface FormProps {\n    list: Item[],\n    onKeyDown: any\n}\n\nclass Form extends React.Component<any, any> {\n    constructor(props: FormProps) {\n        super(props);\n    }\n\n    handleKeyDown(e: any) {\n        const enterKeyCode = 13;\n        if (e.keyCode === enterKeyCode) {\n            this.props.onKeyDown(e.currentTarget.value)\n            e.currentTarget.value = '';\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Form\">\n                <label>\n                    <input className=\"inputTodo\"\n                           onKeyDown={(e) => this.handleKeyDown(e)}\n                           placeholder=\"Input a todo\"/>\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default Form;\n","import React from 'react';\nimport './App.css';\nimport Item from \"./Interfaces/Item\";\nimport './List.css';\n\ninterface ListProps {\n    list: Item[]\n}\n\nclass List extends React.Component<any, any> {\n    constructor(props: ListProps) {\n        super(props);\n    }\n\n    handleChange(i: number, item: Item) {\n        this.props.onChange(i, item)\n    }\n\n    render() {\n        return (\n            <div className=\"List\">\n                <ul>\n                    {this.props.list.map((item: Item, i: number) => (\n                        <li key={i}>\n                            <label onChange={() => this.handleChange(i, item)}>\n                                <input type=\"checkbox\"\n                                       defaultChecked={item.done}/>\n                                <span className={item.done ? 'done' : ''}>{item.todo}</span>\n                            </label>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default List;\n","import React from 'react';\nimport Item from \"./Interfaces/Item\";\nimport './Progress.css';\n\ninterface ProgressProps {\n    list: Item[]\n}\n\nclass Progress extends React.Component<any, any> {\n    constructor(props: ProgressProps) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"Progress\">\n                {this.props.list.filter((item: Item) => {\n                    return !item.done;\n                }).length} items left.\n            </div>\n        );\n    }\n}\n\nexport default Progress;\n","import React from 'react';\nimport './App.css';\nimport Item from \"./Interfaces/Item\";\nimport Todo from \"./Types/Todo\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport Progress from \"./Progress\";\n\ninterface AppState {\n    list: Item[]\n}\n\nclass App extends React.Component<any, AppState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            list: [\n                {todo: '顔を洗う', done: true},\n                {todo: 'ベランダで陽を浴びる', done: false},\n                {todo: 'コーヒーを淹れる', done: false},\n            ],\n        }\n    }\n\n    handleKeyDownAddItem(todo: Todo) {\n        const list = this.state.list.slice(),\n            item = {todo: todo, done: false};\n        list.push(item)\n        this.setState({\n            list: list\n        })\n    }\n\n    handleChangeDone(i: number, item: Item) {\n        const list = this.state.list.slice();\n        list[i] = {todo: item.todo, done: !item.done};\n        this.setState({\n            list: list\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Form onKeyDown={(todo: Todo) => this.handleKeyDownAddItem(todo)}/>\n                <List list={this.state.list}\n                      onChange={(i: number, item: Item) => this.handleChangeDone(i, item)}/>\n                <Progress list={this.state.list}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}